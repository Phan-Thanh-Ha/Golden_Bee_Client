import {
  Image,
  Linking,
  Pressable,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from 'react-native';
import LayoutGradientBlue from '../../components/layouts/LayoutGradientBlue';
import Header from '../../components/Header';
import { colors } from '../../styles/Colors';
import React, { useEffect, useState } from 'react';
import MainStyles, { SCREEN_HEIGHT, SCREEN_WIDTH } from '../../styles/MainStyle';
import { camera_icon, image_banner_5 } from '../../assets';
import Button from '../../components/buttons/Button';
import { ScreenNames } from '../../Constants';
import CustomLabel from '../../components/forms/CustomLabel';
import LayoutBottom from '../../components/layouts/LayoutBottom';
import BtnGetImageModal from '../../components/BtnGetImageModal';
import { AlertToaster } from '../../utils/AlertToaster';
import ArrowRight from '../../components/svg/ArrowRight';
import { useDispatch, useSelector } from 'react-redux';
import { mainAction } from '../../Redux/Action';
import { setData } from '../../utils';
import ModalUserNotActive from '../../components/modal/ModalUserNotActive';
import { useNavigation } from '@react-navigation/native';

const AddProfileScreen = ({ navigation, route }) => {
  const [cmndFront, setCmndFront] = useState([]);
  const [cmndBack, setCmndBack] = useState([]);
  const [confirmAddress, setConfirmAddress] = useState([]);
  const [background, setBackground] = useState([]);
  const [avatar, setAvartar] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const userLogin = useSelector(state => state.main.userLogin);
  const dispatch = useDispatch();
  const navi = useNavigation();
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [title, setTitle] = useState('');
  const UserProfile =
    route.params && route.params.data ? route.params.data : undefined;
  const onConfirm = () => {
    Linking.openURL(`tel:${'0922277782'}`);
    navi.navigate(ScreenNames.MAIN_NAVIGATOR);
    setIsModalVisible(false);
  }
  const validateForm = () => {
    if (avatar.length === 0 || avatar[0] === undefined) {
      AlertToaster(
        'error',
        'Báº¡n cáº§n cung cáº¥p Ä‘á»§ thÃ´ng tin',
        'Vui lÃ²ng thÃªm áº£nh 3x4',
      );
      setIsLoading(false);
      return false;
    } else if (cmndFront.length === 0 || cmndFront[0] === undefined) {
      AlertToaster(
        'error',
        'Báº¡n cáº§n cung cáº¥p Ä‘á»§ thÃ´ng tin',
        'Vui lÃ²ng thÃªm CMND/CCCD máº·t trÆ°á»›c',
      );
      setIsLoading(false);
      return false;
    } else if (cmndBack.length === 0 || cmndBack[0] === undefined) {
      AlertToaster(
        'error',
        'Báº¡n cáº§n cung cáº¥p Ä‘á»§ thÃ´ng tin',
        'Vui lÃ²ng thÃªm CMND/CCCD máº·t sau',
      );
      setIsLoading(false);
      return false;
    } else if (confirmAddress.length === 0 || confirmAddress[0] === undefined) {
      AlertToaster(
        'error',
        'Báº¡n cáº§n cung cáº¥p Ä‘á»§ thÃ´ng tin',
        'Vui lÃ²ng thÃªm Giáº¥y xÃ¡c nháº­n cÆ° trÃº',
      );
      setIsLoading(false);
      return false;
    } else if (background.length === 0 || background[0] === undefined) {
      AlertToaster(
        'error',
        'Báº¡n cáº§n cung cáº¥p Ä‘á»§ thÃ´ng tin',
        'Vui lÃ²ng thÃªm sÆ¡ yáº¿u lÃ½ lá»‹ch',
      );
      setIsLoading(false);
      return false;
    } else return true;
  };
  const CRM2_spProfileOfficer_Save = async () => {
    const valid = validateForm();
    // console.log("is valid : ", valid);
    if (valid) {
      try {
        const pr = {
          GroupUserId: 10060,
          IdProfileOfficer: 0,
          OfficerID: userLogin.OfficerID,
          OfficerName: userLogin.OfficerName,
          FilesCCCD: cmndFront.join(''),
          FilesCCCD_BackSide: cmndBack.join(''),
          FilesCV: confirmAddress.join(''),
          FilesImage: avatar.join(''),
          FilesBC: background.join(''),
        };
        console.log('pr : ', pr);
        const params = {
          Json: JSON.stringify(pr),
          func: 'CRM2_spProfileOfficer_Save',
        };

        const result = await mainAction.API_spCallServer(params, dispatch);
        console.log('result : ', result);
        // Cáº­p nháº­t xuá»‘ng localStore Ä‘á»ƒ lÆ°u tráº¡ng thÃ¡i Ä‘Ã£ cáº­p nháº­t há»“ sÆ¡
        if (result.Status === 'Success') {
          await setData(StorageNames.USER_PROFILE, {
            ...userLogin,
            FilesBC: background.join(''),
            FilesCCCD: cmndFront.join(''),
            FilesCCCD_BackSide: cmndBack.join(''),
            FilesCV: confirmAddress.join(''),
            Avatar: avatar.join(''),
          });
          console.log('check result ', result);
          setIsLoading(false);
          AlertToaster('success', 'Cáº­p nháº­t há»“ sÆ¡ thÃ nh cÃ´ng !');
          if (userLogin?.State === 10 || !userLogin?.State) {
            // setTitle("Há»“ sÆ¡ cá»§a báº¡n Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t thÃ nh cÃ´ng ! Vui lÃ²ng liÃªn há»‡ Admin Ong VÃ ng Ä‘á»ƒ Ä‘Æ°á»£c há»— trá»£ kÃ­ch hoáº¡t tÃ i khoáº£n");
            setIsModalVisible(true);
          } else {
            navi.navigate(ScreenNames.MAIN_NAVIGATOR);
          }
        }
      } catch (error) {
        console.log('-----> ðŸ’€ðŸ’€ðŸ’€ðŸ’€ðŸ’€ðŸ’€ðŸ’€ðŸ’€ðŸ’€ <-----  error:', error);
      }
    }
  };
  return (
    <LayoutGradientBlue>
      <ScrollView>
        <Header showBackButton={true} color={colors.WHITE} />
        <Text style={MainStyles.titleForgotPasswordForm}>Bá»• sung há»“ sÆ¡</Text>
        <View style={MainStyles.containerFormUpload}>
          <View>
            <View style={MainStyles.rowBtnUpload}>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  áº¢nh 3x4
                </CustomLabel>
              </View>
            </View>
            <BtnGetImageModal
              setImageUrl={setAvartar}
              btnWidth={SCREEN_WIDTH * 0.4}
              btnHeight={SCREEN_HEIGHT * 0.2}
            />
          </View>
          <View>
            <View style={MainStyles.rowBtnUpload}>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  áº¢nh CMND/CCCD
                </CustomLabel>
              </View>
            </View>
            <View style={MainStyles.rowBtnUpload}>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  Máº·t trÆ°á»›c
                </CustomLabel>
              </View>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  Máº·t sau
                </CustomLabel>
              </View>
            </View>
            <View style={MainStyles.rowBtnUpload}>
              <BtnGetImageModal
                setImageUrl={setCmndFront}
                btnWidth={SCREEN_WIDTH * 0.4}
                btnHeight={SCREEN_HEIGHT * 0.15}
              />
              <BtnGetImageModal
                setImageUrl={setCmndBack}
                btnWidth={SCREEN_WIDTH * 0.4}
                btnHeight={SCREEN_HEIGHT * 0.15}
              />
            </View>
          </View>
          <View>
            <View style={MainStyles.rowBtnUpload}>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  Giáº¥y xÃ¡c nháº­n cÆ° trÃº
                </CustomLabel>
              </View>
              <View style={MainStyles.columnBtn}>
                <CustomLabel fontSize={15} color={colors.MAIN_BLUE_CLIENT}>
                  SÆ¡ yáº¿u lÃ½ lá»‹ch
                </CustomLabel>
              </View>
            </View>
            <View style={MainStyles.rowBtnUpload}>
              <BtnGetImageModal
                setImageUrl={setConfirmAddress}
                btnWidth={SCREEN_WIDTH * 0.4}
                btnHeight={SCREEN_HEIGHT * 0.15}
              />
              <BtnGetImageModal
                setImageUrl={setBackground}
                btnWidth={SCREEN_WIDTH * 0.4}
                btnHeight={SCREEN_HEIGHT * 0.15}
              />
            </View>
          </View>
        </View>
      </ScrollView>
      <LayoutBottom>
        <Button
          onPress={CRM2_spProfileOfficer_Save}
          bgColor={colors.PRIMARY_GREEN}
          icon={() => <ArrowRight color={colors.WHITE} />}
          isLoading={isLoading}
          disable={isLoading}>
          Cáº­p nháº­t
        </Button>
      </LayoutBottom>
      <ModalUserNotActive
        title={"Há»“ sÆ¡ cá»§a báº¡n Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t thÃ nh cÃ´ng, vui lÃ²ng liÃªn há»‡ quáº£n trá»‹ viÃªn Ong VÃ ng Ä‘á»ƒ Ä‘Æ°á»£c kÃ­ch hoáº¡t tÃ¬a khoáº£n vÃ  sá»­ dá»¥ng cÃ¡c dá»‹ch vá»¥ cá»§a chÃºng tÃ´i !"}
        isModalVisible={isModalVisible}
        setModalVisible={setIsModalVisible}
        onConfirm={onConfirm}
      />
    </LayoutGradientBlue>
  );
};

export default AddProfileScreen;
